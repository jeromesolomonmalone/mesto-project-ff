{"version":3,"file":"main.js","mappings":"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","sources":["webpack://package.json/./src/scripts/card.js","webpack://package.json/./src/scripts/modal.js","webpack://package.json/./src/scripts/validation.js","webpack://package.json/./src/scripts/api.js","webpack://package.json/./src/scripts/index.js"],"sourcesContent":["const cardTemplate = document.querySelector(\"#card-template\").content;\n\n// @todo: Функция создания карточки\nexport function addCard(item, myID, addLikeApi, removeLikeApi, addLike, removeLike, showPopup, deleteCardApi) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  cardElement.querySelector(\".card__image\").src = item.link;\n  cardElement.querySelector(\".card__image\").alt = item.name;\n  cardElement.querySelector(\".card__title\").textContent = item.name;\n  const numberOfLikes = cardElement.querySelector(\".number__likes\");\n  numberOfLikes.textContent = item.likes.length;\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  if (myID !== item.owner._id) {\n    deleteButton.remove();\n  }\n  deleteButton.addEventListener(\"click\", () => {\n    deleteCard(item._id, cardElement, deleteCardApi);\n  });\n\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n  \n\n  if (item.likes.some((like) => like._id === myID)) {\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  cardLikeButton.addEventListener(\"click\", () => {\n    if (cardLikeButton.classList.contains(\"card__like-button_is-active\")) {\n      removeLikeApi(item._id, cardLikeButton, numberOfLikes, removeLike);\n    } else {\n      addLikeApi(item._id, cardLikeButton, numberOfLikes, addLike);\n    }\n  });\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  cardImage.addEventListener(\"click\", function () {\n    showPopup(item);\n  });\n\n  return cardElement;\n}\n\n//Функция-константа с изменением ID карты и самой КАРТОЧКИ, а также активации функции удаления карточки и с сервера и с вёрстки\nexport function deleteCard(id, card, deleteCardApi) {\n  deleteCardApi(id)\n    .then(() => {\n      card.remove();\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`));\n}\n\nexport function addLikeApi(id, button, likes, addLike) {\n  addLike(id)\n    .then((res) => {\n      button.classList.add(\"card__like-button_is-active\");\n      likes.textContent = res.likes.length;\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`));\n}\n\nexport function removeLikeApi(id, button, likes, removeLike) {\n  removeLike(id)\n    .then((res) => {\n      button.classList.remove(\"card__like-button_is-active\");\n      likes.textContent = res.likes.length;\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`));\n}\n","// Функция добавления попапам класса открытия\nexport function openPopup(popupElement) {\n  popupElement.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Функция перебора элементов с последующим наложением на каждый функцию,\n//которая убирает класс с элементов\nexport function closePopup(popupElement) {\n  popupElement.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Слушатель на весь документ, если конпка Escape и у попапа класс открытия, то попап закрывается\nfunction closePopupByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\n// Функция, которая убирает класс с элементов, если нажатие вне попапа на оверлей\nexport function addCloseOverlayListener(element) {\n  element.addEventListener(\"click\", function (e) {\n    if (e.target === e.currentTarget) {\n      closePopup(e.currentTarget);\n    }\n  });\n}\n","export const validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nconst showInputError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  inputErrorClass,\n  errorClass\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(errorClass);\n};\n\nconst hideInputError = (\n  formElement,\n  inputElement,\n  inputErrorClass,\n  errorClass\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(inputErrorClass);\n  inputElement.setCustomValidity(\"\");\n  errorElement.classList.remove(errorClass);\n  errorElement.textContent = \"\";\n};\n\nconst checkInputValidity = (\n  formElement,\n  inputElement,\n  { inputErrorClass, errorClass }\n) => {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      inputErrorClass,\n      errorClass\n    );\n  } else {\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\n  }\n};\n\nconst setEventListeners = (\n  formElement,\n  { inputSelector, submitButtonSelector }\n) => {\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\n  const buttonElement = formElement.querySelector(submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function () {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n};\n\nexport const enableValidation = ({ formSelector }) => {\n  const formList = Array.from(document.querySelectorAll(formSelector));\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", function (evt) {\n      evt.preventDefault();\n    });\n\n    setEventListeners(formElement, validationConfig);\n  });\n};\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\nconst toggleButtonState = (\n  inputList,\n  buttonElement,\n  { inactiveButtonClass }\n) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(inactiveButtonClass);\n    buttonElement.disabled = false;\n  }\n};\n\nexport const clearValidation = (\n  form,\n  {\n    inputSelector,\n    inputErrorClass,\n    errorClass,\n    inactiveButtonClass,\n    submitButtonSelector,\n  }\n) => {\n  const inputError = form.querySelectorAll(inputSelector);\n  inputError.forEach((evt) => {\n    evt.classList.remove(inputErrorClass);\n    evt.setCustomValidity(\"\");\n    const errorElement = form.querySelector(`.${evt.id}-error`);\n    errorElement.classList.remove(errorClass);\n    errorElement.textContent = \"\";\n  });\n  form.querySelector(submitButtonSelector).classList.add(inactiveButtonClass);\n};\n","//Главные ссылка и пароль, главный конфиг\nconst config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-18\",\n  headers: {\n    authorization: \"4c84455c-b37c-4017-b90f-e1abc3cb4dd2\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n//Если с ответом от сервера все ОК, то возращается результат, если нет - то отображается ошибка\nconst handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n//Функция-константа с получением данных о пользователе\nexport const getDataProfile = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с получением данных о картах\nexport const getDataCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с пересохранением данных ИМЕНИ и ПОДРОБНЕЕ\nexport const saveProfileApi = (data) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  });\n};\n\n//Функция-константа с передачей на сервер данных карточки\nexport const addNewApiCard = (data) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  }).then(handleResponse);\n};\n\n//Функция-константа с удалением карточки с сервера\nexport const deleteCardApi = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/${cardID}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с добавлением в массив LIKES лайка от меня\nexport const addLike = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardID}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с удалением из массива LIKES лайка от меня\nexport const removeLike = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardID}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с пересохранением ссылки АВАТАРА\nexport const saveAvatarApi = (data) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  });\n};\n","import \"../pages/index.css\";\nimport { addCard, addLikeApi, removeLikeApi } from \"./card.js\";\nimport { openPopup, closePopup, addCloseOverlayListener } from \"./modal.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  validationConfig,\n} from \"./validation.js\";\nimport {\n  getDataProfile,\n  getDataCards,\n  saveProfileApi,\n  addNewApiCard,\n  saveAvatarApi,\n  addLike,\n  removeLike,\n  deleteCardApi,\n} from \"./api.js\";\n\n// @todo: DOM узлы\nconst cardsList = document.querySelector(\".places__list\");\nconst profileEditOpen = document.querySelector(\".profile__edit-button\");\nconst profileAddButton = document.querySelector(\".profile__add-button\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupTypeEditAvatar = document.querySelector(\".popup_type_edit-avatar\");\nconst closeButtons = document.querySelectorAll(\".popup__close\");\nconst popups = document.querySelectorAll(\".popup\");\nconst editProfile = document.forms[\"edit-profile\"];\nconst nameInput = editProfile.elements.name;\nconst jobInput = editProfile.elements.description;\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst newPlace = document.forms[\"new-place\"];\nconst placeName = newPlace.elements[\"place-name\"];\nconst placeLink = newPlace.elements.link;\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst profileAvatar = document.querySelector(\".profile__image\");\nconst buttonEditProfile = document.querySelector(\".button_edit-profile\");\nconst buttonNewPlace = document.querySelector(\".button_new-place\");\nconst buttonEditAvatar = document.querySelector(\".button_edit-avatar\");\nconst editAvatar = document.forms[\"edit-avatar\"];\nconst avatarInput = editAvatar.elements.avatar;\nlet myID = null;\n\n// @todo: Вывести карточки на страницу\n//Активация функции добавления карты, через проход массива карт из ссылки\nPromise.all([getDataProfile(), getDataCards()])\n  .then((res) => {\n    const dataProfile = res[0];\n    profileTitle.textContent = dataProfile.name;\n    profileDescription.textContent = dataProfile.about;\n    profileAvatar.style.backgroundImage = \"url(\" + dataProfile.avatar + \")\";\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    avatarInput.value = dataProfile.avatar;\n    myID = dataProfile._id;\n\n    res[1].forEach(function (element) {\n      cardsList.append(\n        addCard(\n          element,\n          myID,\n          addLikeApi,\n          removeLikeApi,\n          addLike,\n          removeLike,\n          showPopup,\n          deleteCardApi\n        )\n      );\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\n//Наложение на каждый попап класса анимации\npopups.forEach(function (element) {\n  element.classList.add(\"popup_is-animated\");\n});\n\n// При нажатии на кнопку редактирования профиля вызывается функция открытия попапа,\n//и в форме отображаются изначальные данные\nprofileEditOpen.addEventListener(\"click\", function () {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(popupTypeEdit);\n  clearValidation(editProfile, validationConfig);\n});\n\n// При нажатии на кнопку добавления карточки вызывается функция открытия попапа\nprofileAddButton.addEventListener(\"click\", function () {\n  openPopup(popupTypeNewCard);\n});\n\n// При нажатии на аватарку вызывается функция открытия попапа\nprofileAvatar.addEventListener(\"click\", function () {\n  openPopup(popupTypeEditAvatar);\n});\n\n// Функция с константой попапа карточек с изображениями и привязка к ним данных из\n//темплейта и вызов функции открытии попапа\nfunction showPopup(item) {\n  popupTypeImage.querySelector(\".popup__image\").src = item.link;\n  popupTypeImage.querySelector(\".popup__image\").alt = item.name;\n  popupTypeImage.querySelector(\".popup__caption\").textContent = item.name;\n  openPopup(popupTypeImage);\n}\n\n// Перебор кнопок закрытия с последующим наложения на них функции, которая убирает класс с элементов\ncloseButtons.forEach(function (element) {\n  element.addEventListener(\"click\", function () {\n    popups.forEach(closePopup);\n  });\n});\n\n// Перебор попапов с последующим наложения на них функции, которая убирает класс с элементов,\n//если нажатие вне попапа на оверлей\npopups.forEach(addCloseOverlayListener);\n\n//Функция сохранения данных ИМЕНИ и ПОДРОБНЕЕ\nfunction saveProfileData(evt) {\n  evt.preventDefault();\n  saveProfileApi({\n    name: nameInput.value,\n    about: jobInput.value,\n  })\n    .then((res) => {\n      renderLoading(true, buttonEditProfile);\n      profileTitle.textContent = nameInput.value;\n      profileDescription.textContent = jobInput.value;\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`))\n    .finally(() => {\n      renderLoading(false, buttonEditProfile);\n      closePopup(popupTypeEdit);\n    });\n}\n\neditProfile.addEventListener(\"submit\", saveProfileData);\n\n//Функция сохранения данных КАРТОЧКИ\nfunction createCard(evt) {\n  evt.preventDefault();\n  addNewApiCard({\n    name: placeName.value,\n    link: placeLink.value,\n  })\n    .then((res) => {\n      renderLoading(true, buttonNewPlace);\n      cardsList.prepend(\n        addCard(\n          res,\n          myID,\n          addLikeApi,\n          removeLikeApi,\n          addLike,\n          removeLike,\n          showPopup,\n          deleteCardApi\n        )\n      );\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`))\n    .finally(() => {\n      renderLoading(false, buttonNewPlace);\n      evt.target.reset();\n      clearValidation(newPlace, validationConfig);\n      closePopup(popupTypeNewCard);\n    });\n}\n\nnewPlace.addEventListener(\"submit\", createCard);\n\n//Функция сохранения ссылки АВАТАРА\nfunction editAvatarApi(evt) {\n  evt.preventDefault();\n  saveAvatarApi({\n    avatar: avatarInput.value,\n  })\n    .then(() => {\n      renderLoading(true, buttonEditAvatar);\n      profileAvatar.style.backgroundImage = \"url(\" + avatarInput.value + \")\";\n    })\n    .catch((err) => console.log(`Ошибка.....: ${err}`))\n    .finally(() => {\n      renderLoading(false, buttonEditAvatar);\n      closePopup(popupTypeEditAvatar);\n    });\n}\n\neditAvatar.addEventListener(\"submit\", editAvatarApi);\n\n//Функция, в которой если isLoading = true, то на кнопке текст \"Сохранение...\"\nfunction renderLoading(isLoading, element) {\n  if (isLoading) {\n    element.textContent = \"Сохранение...\";\n  } else {\n    element.textContent = \"Сохранить\";\n  }\n}\n\nenableValidation(validationConfig);\n"],"names":["cardTemplate","document","querySelector","content","addCard","item","myID","addLikeApi","removeLikeApi","addLike","removeLike","showPopup","deleteCardApi","cardElement","cloneNode","src","link","alt","name","textContent","numberOfLikes","likes","length","deleteButton","owner","_id","remove","addEventListener","id","card","then","catch","err","console","log","concat","deleteCard","cardLikeButton","some","like","classList","add","contains","button","res","openPopup","popupElement","closePopupByEsc","closePopup","removeEventListener","evt","key","formSelector","validationConfig","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","_ref4","inputElement","validity","valid","hasInvalidInput","disabled","clearValidation","form","_ref5","querySelectorAll","forEach","setCustomValidity","errorElement","config","baseUrl","headers","authorization","handleResponse","ok","json","Promise","reject","status","cardID","fetch","method","cardsList","profileEditOpen","profileAddButton","popupTypeEdit","popupTypeNewCard","popupTypeEditAvatar","closeButtons","popups","editProfile","forms","nameInput","elements","jobInput","description","profileTitle","profileDescription","newPlace","placeName","placeLink","popupTypeImage","profileAvatar","buttonEditProfile","buttonNewPlace","buttonEditAvatar","editAvatar","avatarInput","avatar","renderLoading","isLoading","element","all","dataProfile","about","style","backgroundImage","value","append","e","target","currentTarget","data","preventDefault","body","JSON","stringify","finally","prepend","reset","Array","from","formElement","_ref2","_ref","patternMismatch","dataset","errorMessage","hideInputError","showInputError","validationMessage","checkInputValidity","setEventListeners"],"sourceRoot":""}