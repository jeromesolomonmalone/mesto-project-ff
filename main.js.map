{"version":3,"file":"main.js","mappings":"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","sources":["webpack://package.json/./src/scripts/card.js","webpack://package.json/./src/scripts/modal.js","webpack://package.json/./src/scripts/validation.js","webpack://package.json/./src/scripts/api.js","webpack://package.json/./src/scripts/index.js"],"sourcesContent":["const cardTemplate = document.querySelector(\"#card-template\").content;\n\n// @todo: Функция создания карточки\nexport function addCard(\n  item,\n  deleteCard,\n  showPopup,\n  myID,\n  addLike,\n  removeLike,\n  deleteCardApi,\n  cardId,\n  removeCardLike,\n  addCardLike\n) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  cardElement.querySelector(\".card__image\").src = item.link;\n  cardElement.querySelector(\".card__image\").alt = item.name;\n  cardElement.querySelector(\".card__title\").textContent = item.name;\n\n  // ПУНКТ 7\n\n  //Константа количества лайков с последующей передачей ей количества объектов в массиве на сервере\n  const numberOfLikes = cardElement.querySelector(\".number__likes\");\n  numberOfLikes.textContent = item.likes.length;\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  //Листенер на кнопку корзины с последующим включением функции, в которой передаются ID карты и КАРТОЧКА\n  deleteButton.addEventListener(\"click\", () => {\n    deleteCard(item._id, cardElement, deleteCardApi, cardId);\n  });\n\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n\n  //Если в массиве LIKES элемент ID равен моему ID, то изначально сразу кнопке лайка добавляется активный класс\n  //и по листенеру на кнопку включается функция УДАЛЕНИЯ отовсюду лайка, а если не равен - функция ДОБАВЛЕНИЯ лайка\n  if (item.likes.some((like) => like._id === myID)) {\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\n    cardLikeButton.addEventListener(\"click\", () => {\n      removeCardLike(\n        item._id,\n        cardLikeButton,\n        numberOfLikes,\n        removeLike,\n        cardId\n      );\n    });\n  } else {\n    cardLikeButton.addEventListener(\"click\", () => {\n      addCardLike(item._id, cardLikeButton, numberOfLikes, addLike, cardId);\n    });\n  }\n\n  //Если мой ID не совпадает с ID владельца карты, то кнопке корзины присваевается display \"none\"\n  if (myID !== item.owner._id) {\n    deleteButton.style.display = \"none\";\n  }\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  cardImage.addEventListener(\"click\", function () {\n    showPopup(item);\n  });\n\n  return cardElement;\n}\n\n//Функция-константа с изменением ID карты и самой КАРТОЧКИ, а также активации функции удаления карточки и с сервера и с вёрстки\nexport const deleteCard = (cardID, card, deleteCardApi, cardId) => {\n  cardId = cardID;\n  //Переменная самой КАРТОЧКИ\n  let deleteElement = card;\n  deleteCardApi(cardId).then(() => {\n    deleteElement.remove();\n  });\n};\n\n//Функция-константа с изменением ID карты, КНОПКИ лайк и КОЛИЧЕСТВОМ лайков, а также активации функции добавления\n//лайка на сервер, а уже исходя из нее обновление +1 к количеству лайков в верстке и добавления активного класса кнопке лайк\nexport const addCardLike = (cardID, button, number, addLike, cardId) => {\n  cardId = cardID;\n  //Переменная самой КНОПКИ лайк\n  let likeActiveButton = button;\n  //Переменная КОЛИЧЕСТВА лайков\n  let numberOfLikes = number;\n  addLike(cardId).then((res) => {\n    numberOfLikes.textContent = res.likes.length;\n    likeActiveButton.classList.add(\"card__like-button_is-active\");\n  });\n};\n\n//Функция-константа с изменением ID карты, КНОПКИ лайк и КОЛИЧЕСТВОМ лайков, а также активации функции удаления\n//лайка на сервер, а уже исходя из нее обновление -1 к количеству лайков в верстке и удаления активного класса кнопке лайк\nexport const removeCardLike = (cardID, button, number, removeLike, cardId) => {\n  cardId = cardID;\n  //Переменная самой КНОПКИ лайк\n  let likeActiveButton = button;\n  //Переменная КОЛИЧЕСТВА лайков\n  let numberOfLikes = number;\n  removeLike(cardId).then((res) => {\n    numberOfLikes.textContent = res.likes.length;\n    likeActiveButton.classList.remove(\"card__like-button_is-active\");\n  });\n};\n","// Функция добавления попапам класса открытия\nexport function openPopup(popupElement) {\n  popupElement.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Функция перебора элементов с последующим наложением на каждый функцию,\n//которая убирает класс с элементов\nexport function closePopup(popupElement) {\n  popupElement.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Слушатель на весь документ, если конпка Escape и у попапа класс открытия, то попап закрывается\nfunction closePopupByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\n// Функция, которая убирает класс с элементов, если нажатие вне попапа на оверлей\nexport function addCloseOverlayListener(element) {\n  element.addEventListener(\"click\", function (e) {\n    if (e.target === e.currentTarget) {\n      closePopup(e.currentTarget);\n    }\n  });\n}\n\n//Функция, в которой если isLoading = true, то на кнопке текст \"Сохранение...\"\nexport function renderLoading(isLoading, element) {\n  if (isLoading) {\n    element.textContent = \"Сохранение...\";\n  } else {\n    element.textContent = \"Сохранить\";\n  }\n}\n","const showInputError = (formSelector, inputSelector, errorMessage) => {\n  const errorElement = formSelector.querySelector(`.${inputSelector.id}-error`);\n  inputSelector.classList.add(\"popup__input_type_error\");\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(\"popup__error_visible\");\n};\n\nconst hideInputError = (formSelector, inputSelector) => {\n  const errorElement = formSelector.querySelector(`.${inputSelector.id}-error`);\n  inputSelector.classList.remove(\"popup__input_type_error\");\n  errorElement.classList.remove(\"popup__error_visible\");\n  errorElement.textContent = \"\";\n};\n\nconst checkInputValidity = (formSelector, inputSelector) => {\n  if (inputSelector.validity.patternMismatch) {\n    inputSelector.setCustomValidity(inputSelector.dataset.errorMessage);\n  } else {\n    inputSelector.setCustomValidity(\"\");\n  }\n  if (!inputSelector.validity.valid) {\n    showInputError(\n      formSelector,\n      inputSelector,\n      inputSelector.validationMessage\n    );\n  } else {\n    hideInputError(formSelector, inputSelector);\n  }\n};\n\nconst setEventListeners = (formSelector) => {\n  const inputList = Array.from(formSelector.querySelectorAll(\".popup__input\"));\n  const buttonElement = formSelector.querySelector(\".popup__button\");\n  toggleButtonState(inputList, buttonElement);\n\n  inputList.forEach((inputSelector) => {\n    inputSelector.addEventListener(\"input\", function () {\n      checkInputValidity(formSelector, inputSelector);\n      toggleButtonState(inputList, buttonElement);\n    });\n  });\n};\n\nexport const enableValidation = () => {\n  const formList = Array.from(document.querySelectorAll(\".popup__form\"));\n  formList.forEach((formSelector) => {\n    formSelector.addEventListener(\"submit\", function (evt) {\n      evt.preventDefault();\n    });\n\n    setEventListeners(formSelector);\n  });\n};\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputSelector) => {\n    return !inputSelector.validity.valid;\n  });\n};\n\nconst toggleButtonState = (inputList, buttonElement) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(\"popup__button_disabled\");\n  } else {\n    buttonElement.classList.remove(\"popup__button_disabled\");\n  }\n};\n\nexport function clearValidation(item, element) {\n  const errorElement = item.querySelector(`.${element.id}-error`);\n  element.classList.remove(\"popup__input_type_error\");\n  errorElement.classList.remove(\"popup__error_visible\");\n  errorElement.textContent = \"\";\n  const buttonElement = item.querySelector(\".popup__button\");\n  buttonElement.classList.add(\"popup__button_disabled\");\n}\n","//Главные ссылка и пароль, главный конфиг\nconst config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-18\",\n  headers: {\n    authorization: \"4c84455c-b37c-4017-b90f-e1abc3cb4dd2\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n//Если с ответом от сервера все ОК, то возращается результат, если нет - то отображается ошибка\nconst handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n//Функция-константа с получением данных о пользователе\nexport const getDataProfile = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с получением данных о картах\nexport const getDataCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с пересохранением данных ИМЕНИ и ПОДРОБНЕЕ\nexport const saveProfileApi = (data) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  });\n};\n\n//Функция-константа с передачей на сервер данных карточки\nexport const addNewApiCard = (data) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  }).then(handleResponse);\n};\n\n//Функция-константа с удалением карточки с сервера\nexport const deleteCardApi = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/${cardID}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с добавлением в массив LIKES лайка от меня\nexport const addLike = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardID}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с удалением из массива LIKES лайка от меня\nexport const removeLike = (cardID) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardID}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Функция-константа с пересохранением ссылки АВАТАРА\nexport const saveAvatarApi = (data) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(data),\n  });\n};\n","import \"../pages/index.css\";\nimport { addCard, deleteCard, addCardLike, removeCardLike } from \"./card.js\";\nimport {\n  openPopup,\n  closePopup,\n  addCloseOverlayListener,\n  renderLoading,\n} from \"./modal.js\";\nimport { enableValidation, clearValidation } from \"./validation.js\";\nimport {\n  getDataProfile,\n  getDataCards,\n  saveProfileApi,\n  addNewApiCard,\n  saveAvatarApi,\n  addLike,\n  removeLike,\n  deleteCardApi,\n} from \"./api.js\";\n\n// @todo: DOM узлы\nconst cardsList = document.querySelector(\".places__list\");\nconst profileEditOpen = document.querySelector(\".profile__edit-button\");\nconst profileAddButton = document.querySelector(\".profile__add-button\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupTypeEditAvatar = document.querySelector(\".popup_type_edit-avatar\");\nconst closeButtons = document.querySelectorAll(\".popup__close\");\nconst popups = document.querySelectorAll(\".popup\");\nconst editProfile = document.forms[\"edit-profile\"];\nconst nameInput = editProfile.elements.name;\nconst jobInput = editProfile.elements.description;\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst newPlace = document.forms[\"new-place\"];\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst profileAvatar = document.querySelector(\".profile__image\");\nconst myID = \"2fcc5740c8d4ed7400fccd50\";\nconst buttonEditProfile = document.querySelector(\".button_edit-profile\");\nconst buttonNewPlace = document.querySelector(\".button_new-place\");\nconst buttonEditAvatar = document.querySelector(\".button_edit-avatar\");\nconst editAvatar = document.forms[\"edit-avatar\"];\nconst avatarInput = editAvatar.elements.avatar;\nlet cardId = null;\n\n// @todo: Вывести карточки на страницу\n//Активация функции добавления карты, через проход массива карт из ссылки\ngetDataCards().then((res) => {\n  res.forEach(function (element) {\n    cardsList.append(\n      addCard(\n        element,\n        deleteCard,\n        showPopup,\n        myID,\n        addLike,\n        removeLike,\n        deleteCardApi,\n        cardId,\n        removeCardLike,\n        addCardLike\n      )\n    );\n  });\n});\n\n//Наложение на каждый попап класса анимации\npopups.forEach(function (element) {\n  element.classList.add(\"popup_is-animated\");\n});\n\n// При нажатии на кнопку редактирования профиля вызывается функция открытия попапа,\n//и в форме отображаются изначальные данные\nprofileEditOpen.addEventListener(\"click\", function () {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(popupTypeEdit);\n  clearValidation(editProfile, nameInput);\n  clearValidation(editProfile, jobInput);\n});\n\n// При нажатии на кнопку добавления карточки вызывается функция открытия попапа\nprofileAddButton.addEventListener(\"click\", function () {\n  openPopup(popupTypeNewCard);\n});\n\n// При нажатии на аватарку вызывается функция открытия попапа\nprofileAvatar.addEventListener(\"click\", function () {\n  openPopup(popupTypeEditAvatar);\n});\n\n// Функция с константой попапа карточек с изображениями и привязка к ним данных из\n//темплейта и вызов функции открытии попапа\nfunction showPopup(item) {\n  popupTypeImage.querySelector(\".popup__image\").src = item.link;\n  popupTypeImage.querySelector(\".popup__image\").alt = item.name;\n  popupTypeImage.querySelector(\".popup__caption\").textContent = item.name;\n  openPopup(popupTypeImage);\n}\n\n// Перебор кнопок закрытия с последующим наложения на них функции, которая убирает класс с элементов\ncloseButtons.forEach(function (element) {\n  element.addEventListener(\"click\", function () {\n    popups.forEach(closePopup);\n  });\n});\n\n// Перебор попапов с последующим наложения на них функции, которая убирает класс с элементов,\n//если нажатие вне попапа на оверлей\npopups.forEach(addCloseOverlayListener);\n\nenableValidation();\n\n//Активация функции данных профиля\ngetDataProfile().then((res) => {\n  //Данные шапки равно данные с сервера\n  profileTitle.textContent = res.name;\n  profileDescription.textContent = res.about;\n  profileAvatar.style.backgroundImage = \"url(\" + res.avatar + \")\";\n\n  //Данные инпутов равно данные из шапки\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  avatarInput.value = res.avatar;\n});\n\n//Функция сохранения данных ИМЕНИ и ПОДРОБНЕЕ\nfunction saveProfileData(evt) {\n  evt.preventDefault();\n\n  //Запуск функции изменения кнопки, когда закружается информация\n  renderLoading(true, buttonEditProfile);\n\n  //Данные шапки равно данные инпутов\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n\n  //Активация функции пересохранения данных имени и подробнее\n  saveProfileApi({\n    name: nameInput.value,\n    about: jobInput.value,\n  })\n    //Выключение функции изменения кнопки, когда закружается информация\n    .finally(() => {\n      renderLoading(false, buttonEditProfile);\n    });\n\n  closePopup(popupTypeEdit);\n}\n\neditProfile.addEventListener(\"submit\", saveProfileData);\n\n//Функция сохранения данных КАРТОЧКИ\nfunction createCard(evt) {\n  evt.preventDefault();\n\n  //Запуск функции изменения кнопки, когда закружается информация\n  renderLoading(true, buttonNewPlace);\n  const placeName = newPlace.elements[\"place-name\"];\n  const placeLink = newPlace.elements.link;\n  //Активация функции сохранения карточки\n  addNewApiCard({\n    name: placeName.value,\n    link: placeLink.value,\n  })\n    //Если все прошло успешно, то карточка добавляется вначало списка карточек\n    .then((data) => {\n      cardsList.prepend(\n        addCard(\n          data,\n          deleteCard,\n          showPopup,\n          myID,\n          addLike,\n          removeLike,\n          deleteCardApi,\n          cardId,\n          removeCardLike,\n          addCardLike\n        )\n      );\n    })\n\n    //Выключение функции изменения кнопки, когда закружается информация\n    .finally(() => {\n      renderLoading(false, buttonNewPlace);\n    });\n\n  evt.target.reset();\n  clearValidation(newPlace, placeName);\n  clearValidation(newPlace, placeLink);\n  closePopup(popupTypeNewCard);\n}\n\nnewPlace.addEventListener(\"submit\", createCard);\n\n//Функция сохранения ссылки АВАТАРА\nfunction saveAvatarData(evt) {\n  evt.preventDefault();\n\n  //Запуск функции изменения кнопки, когда закружается информация\n  renderLoading(true, buttonEditAvatar);\n\n  //Данные шапки равно данные инпутов\n  profileAvatar.style.backgroundImage = \"url(\" + avatarInput.value + \")\";\n\n  //Активация функции пересохранения ссылки аватара\n  saveAvatarApi({\n    avatar: avatarInput.value,\n  })\n    //Выключение функции изменения кнопки, когда закружается информация\n    .finally(() => {\n      renderLoading(false, buttonEditAvatar);\n    });\n\n  //Закрытие попапа\n  closePopup(popupTypeEditAvatar);\n}\n\n//Листенер на форму сохранения ссылки АВАТАРА\neditAvatar.addEventListener(\"submit\", saveAvatarData);\n"],"names":["cardTemplate","document","querySelector","content","addCard","item","deleteCard","showPopup","myID","addLike","removeLike","deleteCardApi","cardId","removeCardLike","addCardLike","cardElement","cloneNode","src","link","alt","name","textContent","numberOfLikes","likes","length","deleteButton","addEventListener","_id","cardLikeButton","some","like","classList","add","owner","style","display","cardID","card","deleteElement","then","remove","button","number","likeActiveButton","res","openPopup","popupElement","closePopupByEsc","closePopup","removeEventListener","evt","key","renderLoading","isLoading","element","toggleButtonState","inputList","buttonElement","inputSelector","validity","valid","hasInvalidInput","clearValidation","errorElement","concat","id","config","baseUrl","headers","authorization","handleResponse","ok","json","Promise","reject","status","fetch","method","cardsList","profileEditOpen","profileAddButton","popupTypeEdit","popupTypeNewCard","popupTypeEditAvatar","closeButtons","querySelectorAll","popups","editProfile","forms","nameInput","elements","jobInput","description","profileTitle","profileDescription","newPlace","popupTypeImage","profileAvatar","buttonEditProfile","buttonNewPlace","buttonEditAvatar","editAvatar","avatarInput","avatar","forEach","append","value","e","target","currentTarget","Array","from","formSelector","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","hideInputError","showInputError","validationMessage","checkInputValidity","setEventListeners","about","backgroundImage","data","body","JSON","stringify","finally","placeName","placeLink","prepend","reset"],"sourceRoot":""}