{"version":3,"file":"main.js","mappings":"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","sources":["webpack://package.json/./src/scripts/cards.js","webpack://package.json/./src/scripts/card.js","webpack://package.json/./src/scripts/modal.js","webpack://package.json/./src/scripts/index.js"],"sourcesContent":["export const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  },\n];","const cardTemplate = document.querySelector(\"#card-template\").content;\n\n// @todo: Функция создания карточки\nexport function addCard(item, deleteCard, cardLikeButton, showPopup) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  cardElement.querySelector(\".card__image\").src = item.link;\n  cardElement.querySelector(\".card__image\").alt = item.name;\n  cardElement.querySelector(\".card__title\").textContent = item.name;\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  deleteButton.addEventListener(\"click\", deleteCard);\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  cardImage.addEventListener(\"click\", function(){\n     showPopup(item)\n  });\n\n  cardElement\n    .querySelector(\".card__like-button\")\n    .addEventListener(\"click\", cardLikeButton);\n\n  return cardElement;\n}\n\n// @todo: Функция удаления карточки\nexport function deleteCard(evt) {\n  evt.target.closest(\".places__item\").remove();\n}\n\n//Функция добавления класса активного лайка\nexport function cardLikeButton(evt) {\n  evt.target.classList.toggle(\"card__like-button_is-active\");\n}\n","// Функция добавления попапам класса открытия\nexport function openPopup(popupElement) {\n  popupElement.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Функция перебора элементов с последующим наложением на каждый функцию,\n//которая убирает класс с элементов\nexport function closePopup(popupElement) {\n  popupElement.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Слушатель на весь документ, если конпка Escape и у попапа класс открытия, то попап закрывается\nfunction closePopupByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\n// Функция, которая убирает класс с элементов, если нажатие вне попапа на оверлей\nexport function addCloseOverlayListener(element) {\n  element.addEventListener(\"click\", function (e) {\n    if (e.target === e.currentTarget) {\n      closePopup(e.currentTarget);\n    }\n  });\n}\n","import \"../pages/index.css\";\nimport { initialCards } from \"./cards.js\";\nimport { addCard, deleteCard, cardLikeButton } from \"./card.js\";\nimport { openPopup, closePopup, addCloseOverlayListener } from \"./modal.js\";\n\n// @todo: DOM узлы\nconst cardsList = document.querySelector(\".places__list\");\nconst profileEditOpen = document.querySelector(\".profile__edit-button\");\nconst profileAddButton = document.querySelector(\".profile__add-button\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst closeButtons = document.querySelectorAll(\".popup__close\");\nconst popups = document.querySelectorAll(\".popup\");\nconst editProfile = document.forms[\"edit-profile\"];\nconst nameInput = editProfile.elements.name;\nconst jobInput = editProfile.elements.description;\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst newPlace = document.forms[\"new-place\"];\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\n\n// @todo: Вывести карточки на страницу\ninitialCards.forEach(function (element) {\n  cardsList.append(addCard(element, deleteCard, cardLikeButton, showPopup));\n});\n\n//Наложение на каждый попап класса анимации\npopups.forEach(function (element) {\n  element.classList.add(\"popup_is-animated\");\n});\n\n// При нажатии на кнопку редактирования профиля вызывается функция открытия попапа,\n//и в форме отображаются изначальные данные\nprofileEditOpen.addEventListener(\"click\", function () {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(popupTypeEdit);\n});\n\n// При нажатии на кнопку добавления карточки вызывается функция открытия попапа\nprofileAddButton.addEventListener(\"click\", function () {\n  openPopup(popupTypeNewCard);\n});\n\n// Функция с константой попапа карточек с изображениями и привязка к ним данных из\n//темплейта и вызов функции открытии попапа\nfunction showPopup(item) {\n  popupTypeImage.querySelector(\".popup__image\").src = item.link;\n  popupTypeImage.querySelector(\".popup__image\").alt = item.name;\n  popupTypeImage.querySelector(\".popup__caption\").textContent = item.name;\n  openPopup(popupTypeImage);\n}\n\n// Перебор кнопок закрытия с последующим наложения на них функции, которая убирает класс с элементов\ncloseButtons.forEach(function (element) {\n  element.addEventListener(\"click\", function () {\n    popups.forEach(closePopup);\n  });\n});\n\n// Перебор попапов с последующим наложения на них функции, которая убирает класс с элементов,\n//если нажатие вне попапа на оверлей\npopups.forEach(addCloseOverlayListener);\n\n// Функция, которая сохраняет введенные данные\nfunction saveProfileData(evt) {\n  evt.preventDefault();\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n  closePopup(popupTypeEdit);\n}\n\neditProfile.addEventListener(\"submit\", saveProfileData);\n\n//Функция, которая берет введенные данные из формы, подставляет их в значения имени и ссылки\n//создает новую карточку, передает ее в функцию создания карточек и добавляет на страницу\nfunction createCard(element) {\n  element.preventDefault();\n  const placeName = newPlace.elements[\"place-name\"];\n  const placeLink = newPlace.elements.link;\n  const createCardElement = {\n    name: placeName.value,\n    link: placeLink.value,\n  };\n  const newCardElement = addCard(createCardElement, deleteCard, cardLikeButton, showPopup);\n  cardsList.prepend(newCardElement);\n  element.target.reset();\n  closePopup(popupTypeNewCard);\n}\n\nnewPlace.addEventListener(\"submit\", createCard);\n"],"names":["cardTemplate","document","querySelector","content","addCard","item","deleteCard","cardLikeButton","showPopup","cardElement","cloneNode","src","link","alt","name","textContent","addEventListener","evt","target","closest","remove","classList","toggle","openPopup","popupElement","add","closePopupByEsc","closePopup","removeEventListener","key","cardsList","profileEditOpen","profileAddButton","popupTypeEdit","popupTypeNewCard","closeButtons","querySelectorAll","popups","editProfile","forms","nameInput","elements","jobInput","description","profileTitle","profileDescription","newPlace","popupTypeImage","forEach","element","append","value","e","currentTarget","preventDefault","placeName","placeLink","newCardElement","prepend","reset"],"sourceRoot":""}